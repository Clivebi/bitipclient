apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'org.jetbrains.dokka'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.0"

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName '1.0.7'

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    dokka {
        // 输出格式，目前支持五种，html, javadoc,html-as-java, markdown,kotlin-website*
        outputFormat = 'html'
        // 文档输出目录
        outputDirectory = "$buildDir/javadoc"
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.2.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation "org.jetbrains.anko:anko:$anko_version"
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
}

apply plugin: 'maven'
ext {
    // 从Github上clone下来的项目的本地地址
    MAVEN_PATH ="build/maven"
    PUBLISH_GROUP_ID = 'com.bitip'
    PUBLISH_ARTIFACT_ID = 'core'
    PUBLISH_VERSION = '1.0.8'
}
uploadArchives {
    repositories.mavenDeployer {
        def deployPath = file(project.MAVEN_PATH)
        repository(url: "file://${deployPath.absolutePath}")
        pom.project {
            groupId project.PUBLISH_GROUP_ID
            artifactId project.PUBLISH_ARTIFACT_ID
            version project.PUBLISH_VERSION
        }
    }
}

// 源代码一起打包
task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.sourceFiles
}
artifacts {
    archives androidSourcesJar
}
